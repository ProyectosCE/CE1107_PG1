|Topmodule
switches[0] => ~NO_FANOUT~
switches[1] => ~NO_FANOUT~
switches[2] => ~NO_FANOUT~
switches[3] => ~NO_FANOUT~
switches[4] => B[0].IN1
switches[5] => B[1].IN1
switches[6] => ~NO_FANOUT~
switches[7] => ~NO_FANOUT~
switches[8] => ~NO_FANOUT~
switches[9] => ~NO_FANOUT~
clk => clk.IN2
tx_esp => tx_esp.IN1
rst => rst.IN2
seg0[0] << HEX_SevenSeg:u_display.seg0
seg0[1] << HEX_SevenSeg:u_display.seg0
seg0[2] << HEX_SevenSeg:u_display.seg0
seg0[3] << HEX_SevenSeg:u_display.seg0
seg0[4] << HEX_SevenSeg:u_display.seg0
seg0[5] << HEX_SevenSeg:u_display.seg0
seg0[6] << HEX_SevenSeg:u_display.seg0
leds[0] << alu:u_alu.Z
leds[1] << alu:u_alu.N
leds[2] << alu:u_alu.C
leds[3] << alu:u_alu.V
leds[4] << <GND>
leds[5] << <GND>
leds[6] << <GND>
leds[7] << <GND>
leds[8] << <GND>
leds[9] << <GND>
pwm_gpio << pwm_controller:u_pwm.pwm_out


|Topmodule|UART:uart_inst
clk => clk.IN8
rst_n => rst.IN8
uart_rx => uart_rx.IN2
Out[0] <= reg_n:out_reg.q
Out[1] <= reg_n:out_reg.q
Out[2] <= reg_n:out_reg.q
Out[3] <= reg_n:out_reg.q
Out[4] <= reg_n:out_reg.q
Out[5] <= reg_n:out_reg.q
Out[6] <= reg_n:out_reg.q
Out[7] <= reg_n:out_reg.q


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst
clk => ~NO_FANOUT~
rst => ~NO_FANOUT~
uart_rx => uart_rx.IN2
state[0] => state[0].IN2
state[1] => state[1].IN2
clk_count[0] => Equal0.IN4
clk_count[0] => Equal1.IN31
clk_count[1] => Equal0.IN31
clk_count[1] => Equal1.IN4
clk_count[2] => Equal0.IN30
clk_count[2] => Equal1.IN30
clk_count[3] => Equal0.IN3
clk_count[3] => Equal1.IN29
clk_count[4] => Equal0.IN2
clk_count[4] => Equal1.IN3
clk_count[5] => Equal0.IN29
clk_count[5] => Equal1.IN2
clk_count[6] => Equal0.IN1
clk_count[6] => Equal1.IN28
clk_count[7] => Equal0.IN0
clk_count[7] => Equal1.IN1
clk_count[8] => Equal0.IN28
clk_count[8] => Equal1.IN0
clk_count[9] => Equal0.IN27
clk_count[9] => Equal1.IN27
clk_count[10] => Equal0.IN26
clk_count[10] => Equal1.IN26
clk_count[11] => Equal0.IN25
clk_count[11] => Equal1.IN25
clk_count[12] => Equal0.IN24
clk_count[12] => Equal1.IN24
clk_count[13] => Equal0.IN23
clk_count[13] => Equal1.IN23
clk_count[14] => Equal0.IN22
clk_count[14] => Equal1.IN22
clk_count[15] => Equal0.IN21
clk_count[15] => Equal1.IN21
bit_index[0] => Equal2.IN2
bit_index[1] => Equal2.IN1
bit_index[2] => Equal2.IN0
next_state[0] <= State_Transition:st_trans.next_state
next_state[1] <= State_Transition:st_trans.next_state
load_data <= Output_Logic:out_logic.load_data
inc_clk <= Output_Logic:out_logic.inc_clk
rst_clk <= Output_Logic:out_logic.rst_clk
inc_bit <= Output_Logic:out_logic.inc_bit
rst_bit <= Output_Logic:out_logic.rst_bit
data_valid <= Output_Logic:out_logic.data_valid
clr_data_ready <= Output_Logic:out_logic.clr_data_ready


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans
state[0] => state[0].IN1
state[1] => state[1].IN1
uart_rx => to_start.IN1
uart_rx => to_data.IN1
clk_count_eq_half => to_data.IN1
clk_count_eq_full => stay_data.IN1
clk_count_eq_full => to_stop.IN1
clk_count_eq_full => to_idle.IN1
bit_index_eq_7 => to_stop.IN1
bit_index_eq_7 => stay_data.IN1
next_state[0] <= mux2_1:m9.y
next_state[1] <= mux2_1:m10.y


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m1
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m2
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m3
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m4
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m5
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m6
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m7
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m8
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m9
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans|mux2_1:m10
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|Output_Logic:out_logic
state[0] => Equal0.IN1
state[0] => Equal1.IN0
state[0] => Equal2.IN1
state[0] => Equal3.IN1
state[1] => Equal0.IN0
state[1] => Equal1.IN1
state[1] => Equal2.IN0
state[1] => Equal3.IN0
uart_rx => rst_clk.IN1
uart_rx => rst_bit.IN1
clk_count_eq_half => rst_clk.IN1
clk_count_eq_half => inc_clk.IN1
clk_count_eq_full => load_data.IN1
clk_count_eq_full => rst_clk.IN1
clk_count_eq_full => inc_clk.IN1
clk_count_eq_full => inc_clk.IN1
bit_index_eq_7 => inc_bit.IN1
load_data <= load_data.DB_MAX_OUTPUT_PORT_TYPE
inc_clk <= inc_clk.DB_MAX_OUTPUT_PORT_TYPE
rst_clk <= rst_clk.DB_MAX_OUTPUT_PORT_TYPE
inc_bit <= inc_bit.DB_MAX_OUTPUT_PORT_TYPE
rst_bit <= rst_bit.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= rst_clk.DB_MAX_OUTPUT_PORT_TYPE
clr_data_ready <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg
clk => clk.IN2
rst => rst.IN2
en => en.IN2
d[0] => d[0].IN1
d[1] => d[1].IN1
q[0] <= flip_flop_D_en:bit_ff[0].ff.q
q[1] <= flip_flop_D_en:bit_ff[1].ff.q


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[0].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[1].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst
rst_clk => rst_clk.IN16
inc_clk => inc_clk.IN16
clk_count[0] => clk_count[0].IN1
clk_count[1] => clk_count[1].IN1
clk_count[2] => clk_count[2].IN1
clk_count[3] => clk_count[3].IN1
clk_count[4] => clk_count[4].IN1
clk_count[5] => clk_count[5].IN1
clk_count[6] => clk_count[6].IN1
clk_count[7] => clk_count[7].IN1
clk_count[8] => clk_count[8].IN1
clk_count[9] => clk_count[9].IN1
clk_count[10] => clk_count[10].IN1
clk_count[11] => clk_count[11].IN1
clk_count[12] => clk_count[12].IN1
clk_count[13] => clk_count[13].IN1
clk_count[14] => clk_count[14].IN1
clk_count[15] => clk_count[15].IN1
clk_count_next[0] <= mux2_1:mux_rst[0].mux_inst.y
clk_count_next[1] <= mux2_1:mux_rst[1].mux_inst.y
clk_count_next[2] <= mux2_1:mux_rst[2].mux_inst.y
clk_count_next[3] <= mux2_1:mux_rst[3].mux_inst.y
clk_count_next[4] <= mux2_1:mux_rst[4].mux_inst.y
clk_count_next[5] <= mux2_1:mux_rst[5].mux_inst.y
clk_count_next[6] <= mux2_1:mux_rst[6].mux_inst.y
clk_count_next[7] <= mux2_1:mux_rst[7].mux_inst.y
clk_count_next[8] <= mux2_1:mux_rst[8].mux_inst.y
clk_count_next[9] <= mux2_1:mux_rst[9].mux_inst.y
clk_count_next[10] <= mux2_1:mux_rst[10].mux_inst.y
clk_count_next[11] <= mux2_1:mux_rst[11].mux_inst.y
clk_count_next[12] <= mux2_1:mux_rst[12].mux_inst.y
clk_count_next[13] <= mux2_1:mux_rst[13].mux_inst.y
clk_count_next[14] <= mux2_1:mux_rst[14].mux_inst.y
clk_count_next[15] <= mux2_1:mux_rst[15].mux_inst.y


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[0].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[1].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[2].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[3].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[4].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[5].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[6].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[7].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[8].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[9].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[10].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[11].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[12].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[13].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[14].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_inc[15].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[0].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[1].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[2].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[3].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[4].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[5].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[6].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[7].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[8].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[9].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[10].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[11].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[12].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[13].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[14].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|clk_count_next_logic:clk_count_logic_inst|mux2_1:mux_rst[15].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg
clk => clk.IN16
rst => rst.IN16
en => en.IN16
d[0] => d[0].IN1
d[1] => d[1].IN1
d[2] => d[2].IN1
d[3] => d[3].IN1
d[4] => d[4].IN1
d[5] => d[5].IN1
d[6] => d[6].IN1
d[7] => d[7].IN1
d[8] => d[8].IN1
d[9] => d[9].IN1
d[10] => d[10].IN1
d[11] => d[11].IN1
d[12] => d[12].IN1
d[13] => d[13].IN1
d[14] => d[14].IN1
d[15] => d[15].IN1
q[0] <= flip_flop_D_en:bit_ff[0].ff.q
q[1] <= flip_flop_D_en:bit_ff[1].ff.q
q[2] <= flip_flop_D_en:bit_ff[2].ff.q
q[3] <= flip_flop_D_en:bit_ff[3].ff.q
q[4] <= flip_flop_D_en:bit_ff[4].ff.q
q[5] <= flip_flop_D_en:bit_ff[5].ff.q
q[6] <= flip_flop_D_en:bit_ff[6].ff.q
q[7] <= flip_flop_D_en:bit_ff[7].ff.q
q[8] <= flip_flop_D_en:bit_ff[8].ff.q
q[9] <= flip_flop_D_en:bit_ff[9].ff.q
q[10] <= flip_flop_D_en:bit_ff[10].ff.q
q[11] <= flip_flop_D_en:bit_ff[11].ff.q
q[12] <= flip_flop_D_en:bit_ff[12].ff.q
q[13] <= flip_flop_D_en:bit_ff[13].ff.q
q[14] <= flip_flop_D_en:bit_ff[14].ff.q
q[15] <= flip_flop_D_en:bit_ff[15].ff.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[0].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[1].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[2].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[2].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[2].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[3].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[3].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[3].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[4].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[4].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[4].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[5].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[5].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[5].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[6].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[6].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[6].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[7].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[7].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[7].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[8].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[8].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[8].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[8].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[8].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[8].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[9].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[9].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[9].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[9].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[9].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[9].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[10].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[10].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[10].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[10].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[10].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[10].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[11].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[11].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[11].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[11].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[11].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[11].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[12].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[12].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[12].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[12].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[12].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[12].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[13].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[13].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[13].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[13].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[13].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[13].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[14].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[14].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[14].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[14].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[14].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[14].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[15].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[15].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[15].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[15].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[15].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|flip_flop_D_en:bit_ff[15].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|bit_index_next_logic:bit_index_logic_inst
rst_bit => rst_bit.IN3
inc_bit => inc_bit.IN3
bit_index[0] => bit_index[0].IN1
bit_index[1] => bit_index[1].IN1
bit_index[2] => bit_index[2].IN1
bit_index_next[0] <= mux2_1:mux_rst[0].mux_inst.y
bit_index_next[1] <= mux2_1:mux_rst[1].mux_inst.y
bit_index_next[2] <= mux2_1:mux_rst[2].mux_inst.y


|Topmodule|UART:uart_inst|bit_index_next_logic:bit_index_logic_inst|mux2_1:mux_inc[0].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|bit_index_next_logic:bit_index_logic_inst|mux2_1:mux_inc[1].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|bit_index_next_logic:bit_index_logic_inst|mux2_1:mux_inc[2].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|bit_index_next_logic:bit_index_logic_inst|mux2_1:mux_rst[0].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|bit_index_next_logic:bit_index_logic_inst|mux2_1:mux_rst[1].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|bit_index_next_logic:bit_index_logic_inst|mux2_1:mux_rst[2].mux_inst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg
clk => clk.IN3
rst => rst.IN3
en => en.IN3
d[0] => d[0].IN1
d[1] => d[1].IN1
d[2] => d[2].IN1
q[0] <= flip_flop_D_en:bit_ff[0].ff.q
q[1] <= flip_flop_D_en:bit_ff[1].ff.q
q[2] <= flip_flop_D_en:bit_ff[2].ff.q


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[0].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[1].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[2].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[2].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[2].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg
clk => clk.IN8
rst => rst.IN8
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
bit_index[0] => bit_index[0].IN1
bit_index[1] => bit_index[1].IN1
bit_index[2] => bit_index[2].IN1
q[0] <= flip_flop_D_en:ff0.q
q[1] <= flip_flop_D_en:ff1.q
q[2] <= flip_flop_D_en:ff2.q
q[3] <= flip_flop_D_en:ff3.q
q[4] <= flip_flop_D_en:ff4.q
q[5] <= flip_flop_D_en:ff5.q
q[6] <= flip_flop_D_en:ff6.q
q[7] <= flip_flop_D_en:ff7.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|decoder_3to8:deco_3to8_inst
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[1] => out.IN0
in[1] => out.IN0
in[1] => out.IN0
in[1] => out.IN0
in[2] => out.IN1
in[2] => out.IN1
in[2] => out.IN1
in[2] => out.IN1
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff0
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff0|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff0|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff0|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff0|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff0|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff1
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff1|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff1|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff1|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff1|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff1|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff2
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff2|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff2|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff2|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff2|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff2|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff3
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff3|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff3|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff3|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff3|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff3|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff4
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff4|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff4|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff4|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff4|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff4|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff5
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff5|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff5|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff5|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff5|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff5|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff6
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff6|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff6|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff6|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff6|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff6|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff7
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff7|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff7|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff7|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff7|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:shift_reg|flip_flop_D_en:ff7|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg
clk => clk.IN8
rst => rst.IN8
en => en.IN8
d[0] => d[0].IN1
d[1] => d[1].IN1
d[2] => d[2].IN1
d[3] => d[3].IN1
d[4] => d[4].IN1
d[5] => d[5].IN1
d[6] => d[6].IN1
d[7] => d[7].IN1
q[0] <= flip_flop_D_en:bit_ff[0].ff.q
q[1] <= flip_flop_D_en:bit_ff[1].ff.q
q[2] <= flip_flop_D_en:bit_ff[2].ff.q
q[3] <= flip_flop_D_en:bit_ff[3].ff.q
q[4] <= flip_flop_D_en:bit_ff[4].ff.q
q[5] <= flip_flop_D_en:bit_ff[5].ff.q
q[6] <= flip_flop_D_en:bit_ff[6].ff.q
q[7] <= flip_flop_D_en:bit_ff[7].ff.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[0].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[1].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[2].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[2].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[2].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[3].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[3].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[3].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[4].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[4].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[4].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[5].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[5].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[5].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[6].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[6].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[6].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[7].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[7].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[7].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|flip_flop_D_en:data_ready_ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|flip_flop_D_en:data_ready_ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|flip_flop_D_en:data_ready_ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|flip_flop_D_en:data_ready_ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|flip_flop_D_en:data_ready_ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|flip_flop_D_en:data_ready_ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg
clk => clk.IN8
rst => rst.IN8
en => en.IN8
d[0] => d[0].IN1
d[1] => d[1].IN1
d[2] => d[2].IN1
d[3] => d[3].IN1
d[4] => d[4].IN1
d[5] => d[5].IN1
d[6] => d[6].IN1
d[7] => d[7].IN1
q[0] <= flip_flop_D_en:bit_ff[0].ff.q
q[1] <= flip_flop_D_en:bit_ff[1].ff.q
q[2] <= flip_flop_D_en:bit_ff[2].ff.q
q[3] <= flip_flop_D_en:bit_ff[3].ff.q
q[4] <= flip_flop_D_en:bit_ff[4].ff.q
q[5] <= flip_flop_D_en:bit_ff[5].ff.q
q[6] <= flip_flop_D_en:bit_ff[6].ff.q
q[7] <= flip_flop_D_en:bit_ff[7].ff.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[0].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[0].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[0].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[1].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[1].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[1].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[2].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[2].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[2].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[2].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[3].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[3].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[3].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[3].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[4].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[4].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[4].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[4].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[5].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[5].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[5].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[5].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[6].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[6].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[6].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[6].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[7].ff
clk => clk.IN1
rst => rst.IN1
en => en.IN1
d => d.IN1
q <= mux2_1:mux_rst.y


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[7].ff|mux2_1:mux_en
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[7].ff|mux2_1:mux_rst
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff
clk => clk.IN1
d => d.IN1
q <= d_latch:slave.q


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff|d_latch:master
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:out_reg|flip_flop_D_en:bit_ff[7].ff|FF_D:ff|d_latch:slave
d => s.IN0
d => r.IN0
en => s.IN1
en => r.IN1
q <= q.DB_MAX_OUTPUT_PORT_TYPE
qn <= qn.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu
A[0] => A[0].IN4
A[1] => A[1].IN4
A[2] => A[2].IN4
A[3] => A[3].IN4
B[0] => B[0].IN4
B[1] => B[1].IN4
sel[0] => sel[0].IN1
sel[1] => sel[1].IN1
Y[0] <= mux4_1:u_mux.Y
Y[1] <= mux4_1:u_mux.Y
Y[2] <= mux4_1:u_mux.Y
Y[3] <= mux4_1:u_mux.Y
Z <= Z.DB_MAX_OUTPUT_PORT_TYPE
N <= mux4_1:u_mux.Y
C <= C.DB_MAX_OUTPUT_PORT_TYPE
V <= V.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu|and_op:u_and
A[0] => Y.IN0
A[1] => Y.IN0
A[2] => ~NO_FANOUT~
A[3] => ~NO_FANOUT~
B[0] => Y.IN1
B[1] => Y.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= <GND>
Y[3] <= <GND>


|Topmodule|alu:u_alu|xor_op:u_xor
A[0] => Y.IN0
A[1] => Y.IN0
A[2] => Y[2].DATAIN
A[3] => Y[3].DATAIN
B[0] => Y.IN1
B[1] => Y.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= A[2].DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= A[3].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu|sub_op:u_sub
A[0] => Y.IN0
A[0] => C1.IN0
A[0] => C1.IN1
A[1] => Y.IN0
A[1] => C2.IN0
A[1] => C2.IN1
A[2] => C3.IN1
A[2] => Y.IN1
A[2] => C3.IN1
A[3] => C4.IN1
A[3] => Y.IN1
A[3] => C4.IN1
B[0] => Y.IN1
B[0] => C1.IN1
B[0] => C1.IN1
B[1] => Y.IN1
B[1] => C2.IN1
B[1] => C2.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y.DB_MAX_OUTPUT_PORT_TYPE
C_out <= C4.DB_MAX_OUTPUT_PORT_TYPE
V_out <= V_out.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu|mul_op:u_mul
A[0] => pp0.IN0
A[0] => pp1_1.IN0
A[1] => pp1_0.IN0
A[1] => pp2_1.IN0
A[2] => pp2_0.IN0
A[2] => pp3_1.IN0
A[3] => pp3_0.IN0
A[3] => pp4_1.IN0
B[0] => pp0.IN1
B[0] => pp1_0.IN1
B[0] => pp2_0.IN1
B[0] => pp3_0.IN1
B[1] => pp1_1.IN1
B[1] => pp2_1.IN1
B[1] => pp3_1.IN1
B[1] => pp4_1.IN1
Y[0] <= pp0.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y.DB_MAX_OUTPUT_PORT_TYPE
C_out <= C_out.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu|mux4_1:u_mux
D0[0] => t0.IN0
D0[1] => t0.IN0
D0[2] => t0.IN0
D0[3] => t0.IN0
D1[0] => t1.IN0
D1[1] => t1.IN0
D1[2] => t1.IN0
D1[3] => t1.IN0
D2[0] => t2.IN0
D2[1] => t2.IN0
D2[2] => t2.IN0
D2[3] => t2.IN0
D3[0] => t3.IN0
D3[1] => t3.IN0
D3[2] => t3.IN0
D3[3] => t3.IN0
sel[0] => t1[0].IN1
sel[0] => t1[1].IN1
sel[0] => t1[2].IN1
sel[0] => t1[3].IN1
sel[0] => t3[0].IN1
sel[0] => t3[1].IN1
sel[0] => t3[2].IN1
sel[0] => t3[3].IN1
sel[0] => t0[3].IN1
sel[0] => t2[3].IN1
sel[0] => t0[2].IN1
sel[0] => t2[2].IN1
sel[0] => t0[1].IN1
sel[0] => t2[1].IN1
sel[0] => t0[0].IN1
sel[0] => t2[0].IN1
sel[1] => t2.IN1
sel[1] => t2.IN1
sel[1] => t2.IN1
sel[1] => t2.IN1
sel[1] => t3.IN1
sel[1] => t3.IN1
sel[1] => t3.IN1
sel[1] => t3.IN1
sel[1] => t0.IN1
sel[1] => t1.IN1
sel[1] => t0.IN1
sel[1] => t1.IN1
sel[1] => t0.IN1
sel[1] => t1.IN1
sel[1] => t0.IN1
sel[1] => t1.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|HEX_SevenSeg:u_display
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN1
a[1] => seg0_internal.IN1
a[1] => seg0_internal.IN1
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN1
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN1
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN0
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN0
a[2] => seg0_internal.IN0
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN0
a[2] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
seg0[0] <= seg0_internal[0].DB_MAX_OUTPUT_PORT_TYPE
seg0[1] <= seg0_internal[1].DB_MAX_OUTPUT_PORT_TYPE
seg0[2] <= seg0_internal[2].DB_MAX_OUTPUT_PORT_TYPE
seg0[3] <= seg0_internal[3].DB_MAX_OUTPUT_PORT_TYPE
seg0[4] <= seg0_internal[4].DB_MAX_OUTPUT_PORT_TYPE
seg0[5] <= seg0_internal[5].DB_MAX_OUTPUT_PORT_TYPE
seg0[6] <= seg0_internal[6].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|pwm_controller:u_pwm
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => clk_div[0].CLK
clk => clk_div[1].CLK
clk => clk_div[2].CLK
clk => clk_div[3].CLK
clk => clk_div[4].CLK
clk => clk_div[5].CLK
clk => clk_div[6].CLK
clk => clk_div[7].CLK
clk => clk_div[8].CLK
clk => clk_div[9].CLK
clk => clk_div[10].CLK
clk => clk_div[11].CLK
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => clk_div[0].ACLR
rst => clk_div[1].ACLR
rst => clk_div[2].ACLR
rst => clk_div[3].ACLR
rst => clk_div[4].ACLR
rst => clk_div[5].ACLR
rst => clk_div[6].ACLR
rst => clk_div[7].ACLR
rst => clk_div[8].ACLR
rst => clk_div[9].ACLR
rst => clk_div[10].ACLR
rst => clk_div[11].ACLR
duty[0] => LessThan0.IN15
duty[0] => LessThan0.IN16
duty[1] => LessThan0.IN13
duty[1] => LessThan0.IN14
duty[2] => LessThan0.IN11
duty[2] => LessThan0.IN12
duty[3] => LessThan0.IN9
duty[3] => LessThan0.IN10
pwm_out <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


