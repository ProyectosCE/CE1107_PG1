|Topmodule
switches[0] => ~NO_FANOUT~
switches[1] => ~NO_FANOUT~
switches[2] => ~NO_FANOUT~
switches[3] => ~NO_FANOUT~
switches[4] => ~NO_FANOUT~
switches[5] => ~NO_FANOUT~
switches[6] => ~NO_FANOUT~
switches[7] => ~NO_FANOUT~
switches[8] => ~NO_FANOUT~
switches[9] => ~NO_FANOUT~
clk => clk.IN2
tx_esp => tx_esp.IN1
rst => rst.IN1
ABCD[0] => ABCD[0].IN1
ABCD[1] => ABCD[1].IN1
ABCD[2] => ABCD[2].IN1
ABCD[3] => ABCD[3].IN1
seg0[0] << HEX_SevenSeg:u_display.seg0
seg0[1] << HEX_SevenSeg:u_display.seg0
seg0[2] << HEX_SevenSeg:u_display.seg0
seg0[3] << HEX_SevenSeg:u_display.seg0
seg0[4] << HEX_SevenSeg:u_display.seg0
seg0[5] << HEX_SevenSeg:u_display.seg0
seg0[6] << HEX_SevenSeg:u_display.seg0
leds[0] << alu:u_alu.Z
leds[1] << alu:u_alu.N
leds[2] << alu:u_alu.C
leds[3] << alu:u_alu.V
leds[4] << <GND>
leds[5] << <GND>
leds[6] << <GND>
leds[7] << <GND>
leds[8] << <GND>
leds[9] << <GND>
pwm_gpio << pwm_controller:u_pwm.pwm_out


|Topmodule|Enco_Four_Two:insenco
A[0] => ~NO_FANOUT~
A[1] => B.IN0
A[2] => B.IN0
A[3] => B.IN1
A[3] => B.IN1
B[0] <= B.DB_MAX_OUTPUT_PORT_TYPE
B[1] <= B.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst
clk => clk.IN7
uart_rx => uart_rx.IN2
Out[0] <= Out[0].DB_MAX_OUTPUT_PORT_TYPE
Out[1] <= Out[1].DB_MAX_OUTPUT_PORT_TYPE
Out[2] <= Out[2].DB_MAX_OUTPUT_PORT_TYPE
Out[3] <= Out[3].DB_MAX_OUTPUT_PORT_TYPE
Out[4] <= Out[4].DB_MAX_OUTPUT_PORT_TYPE
Out[5] <= Out[5].DB_MAX_OUTPUT_PORT_TYPE
Out[6] <= Out[6].DB_MAX_OUTPUT_PORT_TYPE
Out[7] <= Out[7].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst
clk => ~NO_FANOUT~
uart_rx => uart_rx.IN2
state[0] => state[0].IN2
state[1] => state[1].IN2
clk_count[0] => Equal0.IN4
clk_count[0] => Equal1.IN31
clk_count[1] => Equal0.IN31
clk_count[1] => Equal1.IN4
clk_count[2] => Equal0.IN30
clk_count[2] => Equal1.IN30
clk_count[3] => Equal0.IN3
clk_count[3] => Equal1.IN29
clk_count[4] => Equal0.IN2
clk_count[4] => Equal1.IN3
clk_count[5] => Equal0.IN29
clk_count[5] => Equal1.IN2
clk_count[6] => Equal0.IN1
clk_count[6] => Equal1.IN28
clk_count[7] => Equal0.IN0
clk_count[7] => Equal1.IN1
clk_count[8] => Equal0.IN28
clk_count[8] => Equal1.IN0
clk_count[9] => Equal0.IN27
clk_count[9] => Equal1.IN27
clk_count[10] => Equal0.IN26
clk_count[10] => Equal1.IN26
clk_count[11] => Equal0.IN25
clk_count[11] => Equal1.IN25
clk_count[12] => Equal0.IN24
clk_count[12] => Equal1.IN24
clk_count[13] => Equal0.IN23
clk_count[13] => Equal1.IN23
clk_count[14] => Equal0.IN22
clk_count[14] => Equal1.IN22
clk_count[15] => Equal0.IN21
clk_count[15] => Equal1.IN21
bit_index[0] => Equal2.IN2
bit_index[1] => Equal2.IN1
bit_index[2] => Equal2.IN0
next_state[0] <= State_Transition:st_trans.next_state
next_state[1] <= State_Transition:st_trans.next_state
load_data <= Output_Logic:out_logic.load_data
inc_clk <= Output_Logic:out_logic.inc_clk
rst_clk <= Output_Logic:out_logic.rst_clk
inc_bit <= Output_Logic:out_logic.inc_bit
rst_bit <= Output_Logic:out_logic.rst_bit
data_valid <= Output_Logic:out_logic.data_valid
clr_data_ready <= Output_Logic:out_logic.clr_data_ready


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|State_Transition:st_trans
state[0] => next_state.IN0
state[0] => next_state.IN0
state[0] => next_state.IN0
state[0] => next_state.IN0
state[1] => next_state.IN1
state[1] => next_state.IN1
state[1] => next_state.IN1
state[1] => next_state.IN1
uart_rx => next_state.IN1
uart_rx => next_state.IN1
clk_count_eq_half => next_state.IN1
clk_count_eq_half => next_state.IN1
clk_count_eq_full => next_state.IN1
clk_count_eq_full => next_state.IN1
clk_count_eq_full => next_state.IN1
bit_index_eq_7 => next_state.IN1
bit_index_eq_7 => next_state.IN1
next_state[0] <= next_state.DB_MAX_OUTPUT_PORT_TYPE
next_state[1] <= next_state.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|UART_FSM:fsm_inst|Output_Logic:out_logic
state[0] => inc_clk.IN0
state[0] => inc_clk.IN0
state[0] => load_data.IN0
state[0] => rst_clk.IN0
state[1] => load_data.IN1
state[1] => inc_clk.IN1
state[1] => inc_clk.IN1
state[1] => rst_clk.IN1
uart_rx => clr_data_ready.IN1
uart_rx => inc_clk.IN1
uart_rx => rst_clk.IN1
clk_count_eq_half => rst_clk.IN1
clk_count_eq_half => inc_clk.IN1
clk_count_eq_full => load_data.IN1
clk_count_eq_full => rst_clk.IN1
clk_count_eq_full => inc_clk.IN1
clk_count_eq_full => inc_clk.IN1
bit_index_eq_7 => load_data.IN1
bit_index_eq_7 => load_data.IN1
load_data <= load_data.DB_MAX_OUTPUT_PORT_TYPE
inc_clk <= inc_clk.DB_MAX_OUTPUT_PORT_TYPE
rst_clk <= rst_clk.DB_MAX_OUTPUT_PORT_TYPE
inc_bit <= load_data.DB_MAX_OUTPUT_PORT_TYPE
rst_bit <= rst_bit.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= rst_clk.DB_MAX_OUTPUT_PORT_TYPE
clr_data_ready <= clr_data_ready.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg
clk => clk.IN2
d[0] => d[0].IN1
d[1] => d[1].IN1
en => en.IN2
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|mux2_1:reg_loop[0].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|Flip_Flop_D:reg_loop[0].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|mux2_1:reg_loop[1].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:state_reg|Flip_Flop_D:reg_loop[1].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1
sel => sel.IN16
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
y[0] <= mux2_1:mux_loop[0].m.y
y[1] <= mux2_1:mux_loop[1].m.y
y[2] <= mux2_1:mux_loop[2].m.y
y[3] <= mux2_1:mux_loop[3].m.y
y[4] <= mux2_1:mux_loop[4].m.y
y[5] <= mux2_1:mux_loop[5].m.y
y[6] <= mux2_1:mux_loop[6].m.y
y[7] <= mux2_1:mux_loop[7].m.y
y[8] <= mux2_1:mux_loop[8].m.y
y[9] <= mux2_1:mux_loop[9].m.y
y[10] <= mux2_1:mux_loop[10].m.y
y[11] <= mux2_1:mux_loop[11].m.y
y[12] <= mux2_1:mux_loop[12].m.y
y[13] <= mux2_1:mux_loop[13].m.y
y[14] <= mux2_1:mux_loop[14].m.y
y[15] <= mux2_1:mux_loop[15].m.y


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[0].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[1].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[2].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[3].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[4].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[5].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[6].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[7].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[8].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[9].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[10].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[11].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[12].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[13].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[14].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux1|mux2_1:mux_loop[15].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2
sel => sel.IN16
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
y[0] <= mux2_1:mux_loop[0].m.y
y[1] <= mux2_1:mux_loop[1].m.y
y[2] <= mux2_1:mux_loop[2].m.y
y[3] <= mux2_1:mux_loop[3].m.y
y[4] <= mux2_1:mux_loop[4].m.y
y[5] <= mux2_1:mux_loop[5].m.y
y[6] <= mux2_1:mux_loop[6].m.y
y[7] <= mux2_1:mux_loop[7].m.y
y[8] <= mux2_1:mux_loop[8].m.y
y[9] <= mux2_1:mux_loop[9].m.y
y[10] <= mux2_1:mux_loop[10].m.y
y[11] <= mux2_1:mux_loop[11].m.y
y[12] <= mux2_1:mux_loop[12].m.y
y[13] <= mux2_1:mux_loop[13].m.y
y[14] <= mux2_1:mux_loop[14].m.y
y[15] <= mux2_1:mux_loop[15].m.y


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[0].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[1].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[2].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[3].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[4].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[5].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[6].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[7].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[8].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[9].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[10].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[11].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[12].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[13].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[14].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:clk_mux2|mux2_1:mux_loop[15].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg
clk => clk.IN16
d[0] => d[0].IN1
d[1] => d[1].IN1
d[2] => d[2].IN1
d[3] => d[3].IN1
d[4] => d[4].IN1
d[5] => d[5].IN1
d[6] => d[6].IN1
d[7] => d[7].IN1
d[8] => d[8].IN1
d[9] => d[9].IN1
d[10] => d[10].IN1
d[11] => d[11].IN1
d[12] => d[12].IN1
d[13] => d[13].IN1
d[14] => d[14].IN1
d[15] => d[15].IN1
en => en.IN16
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q[15].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[0].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[0].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[1].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[1].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[2].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[2].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[3].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[3].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[4].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[4].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[5].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[5].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[6].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[6].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[7].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[7].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[8].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[8].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[9].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[9].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[10].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[10].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[11].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[11].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[12].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[12].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[13].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[13].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[14].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[14].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|mux2_1:reg_loop[15].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:clk_count_reg|Flip_Flop_D:reg_loop[15].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:bit_mux1
sel => sel.IN3
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
y[0] <= mux2_1:mux_loop[0].m.y
y[1] <= mux2_1:mux_loop[1].m.y
y[2] <= mux2_1:mux_loop[2].m.y


|Topmodule|UART:uart_inst|mux2_1_n:bit_mux1|mux2_1:mux_loop[0].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:bit_mux1|mux2_1:mux_loop[1].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:bit_mux1|mux2_1:mux_loop[2].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:bit_mux2
sel => sel.IN3
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
y[0] <= mux2_1:mux_loop[0].m.y
y[1] <= mux2_1:mux_loop[1].m.y
y[2] <= mux2_1:mux_loop[2].m.y


|Topmodule|UART:uart_inst|mux2_1_n:bit_mux2|mux2_1:mux_loop[0].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:bit_mux2|mux2_1:mux_loop[1].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:bit_mux2|mux2_1:mux_loop[2].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg
clk => clk.IN3
d[0] => d[0].IN1
d[1] => d[1].IN1
d[2] => d[2].IN1
en => en.IN3
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|mux2_1:reg_loop[0].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|Flip_Flop_D:reg_loop[0].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|mux2_1:reg_loop[1].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|Flip_Flop_D:reg_loop[1].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|mux2_1:reg_loop[2].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:bit_index_reg|Flip_Flop_D:reg_loop[2].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg
clk => clk.IN8
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
load => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
uart_rx => d_next.IN1
bit_index[0] => bit_index[0].IN1
bit_index[1] => bit_index[1].IN1
bit_index[2] => bit_index[2].IN1
q[0] <= Flip_Flop_D:ff0.q
q[1] <= Flip_Flop_D:ff1.q
q[2] <= Flip_Flop_D:ff2.q
q[3] <= Flip_Flop_D:ff3.q
q[4] <= Flip_Flop_D:ff4.q
q[5] <= Flip_Flop_D:ff5.q
q[6] <= Flip_Flop_D:ff6.q
q[7] <= Flip_Flop_D:ff7.q


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|decoder_3to8:deco_3to8_inst
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[0] => out.IN1
in[1] => out.IN0
in[1] => out.IN0
in[1] => out.IN0
in[1] => out.IN0
in[2] => out.IN1
in[2] => out.IN1
in[2] => out.IN1
in[2] => out.IN1
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|Flip_Flop_D:ff0
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|Flip_Flop_D:ff1
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|Flip_Flop_D:ff2
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|Flip_Flop_D:ff3
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|Flip_Flop_D:ff4
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|Flip_Flop_D:ff5
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|Flip_Flop_D:ff6
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|shift_reg_8:rx_shift_reg|Flip_Flop_D:ff7
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:data_mux
sel => sel.IN8
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
y[0] <= mux2_1:mux_loop[0].m.y
y[1] <= mux2_1:mux_loop[1].m.y
y[2] <= mux2_1:mux_loop[2].m.y
y[3] <= mux2_1:mux_loop[3].m.y
y[4] <= mux2_1:mux_loop[4].m.y
y[5] <= mux2_1:mux_loop[5].m.y
y[6] <= mux2_1:mux_loop[6].m.y
y[7] <= mux2_1:mux_loop[7].m.y


|Topmodule|UART:uart_inst|mux2_1_n:data_mux|mux2_1:mux_loop[0].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:data_mux|mux2_1:mux_loop[1].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:data_mux|mux2_1:mux_loop[2].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:data_mux|mux2_1:mux_loop[3].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:data_mux|mux2_1:mux_loop[4].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:data_mux|mux2_1:mux_loop[5].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:data_mux|mux2_1:mux_loop[6].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:data_mux|mux2_1:mux_loop[7].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg
clk => clk.IN8
d[0] => d[0].IN1
d[1] => d[1].IN1
d[2] => d[2].IN1
d[3] => d[3].IN1
d[4] => d[4].IN1
d[5] => d[5].IN1
d[6] => d[6].IN1
d[7] => d[7].IN1
en => en.IN8
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|mux2_1:reg_loop[0].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|Flip_Flop_D:reg_loop[0].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|mux2_1:reg_loop[1].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|Flip_Flop_D:reg_loop[1].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|mux2_1:reg_loop[2].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|Flip_Flop_D:reg_loop[2].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|mux2_1:reg_loop[3].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|Flip_Flop_D:reg_loop[3].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|mux2_1:reg_loop[4].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|Flip_Flop_D:reg_loop[4].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|mux2_1:reg_loop[5].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|Flip_Flop_D:reg_loop[5].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|mux2_1:reg_loop[6].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|Flip_Flop_D:reg_loop[6].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|mux2_1:reg_loop[7].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_reg|Flip_Flop_D:reg_loop[7].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1:data_ready_mux1
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1:data_ready_mux2
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_ready_reg
clk => clk.IN1
d[0] => d[0].IN1
en => en.IN1
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_ready_reg|mux2_1:reg_loop[0].sel_mux
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|reg_n:data_ready_reg|Flip_Flop_D:reg_loop[0].ff
clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:out_mux
sel => sel.IN8
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
y[0] <= mux2_1:mux_loop[0].m.y
y[1] <= mux2_1:mux_loop[1].m.y
y[2] <= mux2_1:mux_loop[2].m.y
y[3] <= mux2_1:mux_loop[3].m.y
y[4] <= mux2_1:mux_loop[4].m.y
y[5] <= mux2_1:mux_loop[5].m.y
y[6] <= mux2_1:mux_loop[6].m.y
y[7] <= mux2_1:mux_loop[7].m.y


|Topmodule|UART:uart_inst|mux2_1_n:out_mux|mux2_1:mux_loop[0].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:out_mux|mux2_1:mux_loop[1].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:out_mux|mux2_1:mux_loop[2].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:out_mux|mux2_1:mux_loop[3].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:out_mux|mux2_1:mux_loop[4].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:out_mux|mux2_1:mux_loop[5].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:out_mux|mux2_1:mux_loop[6].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|UART:uart_inst|mux2_1_n:out_mux|mux2_1:mux_loop[7].m
sel => y.IN0
sel => y.IN0
a => y.IN1
b => y.IN1
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu
A[0] => A[0].IN4
A[1] => A[1].IN4
A[2] => A[2].IN4
A[3] => A[3].IN4
B[0] => B[0].IN4
B[1] => B[1].IN4
sel[0] => sel[0].IN1
sel[1] => sel[1].IN1
Y[0] <= mux4_1:u_mux.Y
Y[1] <= mux4_1:u_mux.Y
Y[2] <= mux4_1:u_mux.Y
Y[3] <= mux4_1:u_mux.Y
Z <= Z.DB_MAX_OUTPUT_PORT_TYPE
N <= mux4_1:u_mux.Y
C <= C.DB_MAX_OUTPUT_PORT_TYPE
V <= V.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu|and_op:u_and
A[0] => Y.IN0
A[1] => Y.IN0
A[2] => ~NO_FANOUT~
A[3] => ~NO_FANOUT~
B[0] => Y.IN1
B[1] => Y.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= <GND>
Y[3] <= <GND>


|Topmodule|alu:u_alu|xor_op:u_xor
A[0] => Y.IN0
A[1] => Y.IN0
A[2] => Y[2].DATAIN
A[3] => Y[3].DATAIN
B[0] => Y.IN1
B[1] => Y.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= A[2].DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= A[3].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu|sub_op:u_sub
A[0] => Y.IN0
A[0] => C1.IN0
A[0] => C1.IN1
A[1] => Y.IN0
A[1] => C2.IN0
A[1] => C2.IN1
A[2] => C3.IN1
A[2] => Y.IN1
A[2] => C3.IN1
A[3] => C4.IN1
A[3] => Y.IN1
A[3] => C4.IN1
B[0] => Y.IN1
B[0] => C1.IN1
B[0] => C1.IN1
B[1] => Y.IN1
B[1] => C2.IN1
B[1] => C2.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y.DB_MAX_OUTPUT_PORT_TYPE
C_out <= C4.DB_MAX_OUTPUT_PORT_TYPE
V_out <= V_out.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu|mul_op:u_mul
A[0] => pp0.IN0
A[0] => pp1_1.IN0
A[1] => pp1_0.IN0
A[1] => pp2_1.IN0
A[2] => pp2_0.IN0
A[2] => pp3_1.IN0
A[3] => pp3_0.IN0
A[3] => pp4_1.IN0
B[0] => pp0.IN1
B[0] => pp1_0.IN1
B[0] => pp2_0.IN1
B[0] => pp3_0.IN1
B[1] => pp1_1.IN1
B[1] => pp2_1.IN1
B[1] => pp3_1.IN1
B[1] => pp4_1.IN1
Y[0] <= pp0.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y.DB_MAX_OUTPUT_PORT_TYPE
C_out <= C_out.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|alu:u_alu|mux4_1:u_mux
D0[0] => t0.IN0
D0[1] => t0.IN0
D0[2] => t0.IN0
D0[3] => t0.IN0
D1[0] => t1.IN0
D1[1] => t1.IN0
D1[2] => t1.IN0
D1[3] => t1.IN0
D2[0] => t2.IN0
D2[1] => t2.IN0
D2[2] => t2.IN0
D2[3] => t2.IN0
D3[0] => t3.IN0
D3[1] => t3.IN0
D3[2] => t3.IN0
D3[3] => t3.IN0
sel[0] => t1[0].IN1
sel[0] => t1[1].IN1
sel[0] => t1[2].IN1
sel[0] => t1[3].IN1
sel[0] => t3[0].IN1
sel[0] => t3[1].IN1
sel[0] => t3[2].IN1
sel[0] => t3[3].IN1
sel[0] => t0[3].IN1
sel[0] => t2[3].IN1
sel[0] => t0[2].IN1
sel[0] => t2[2].IN1
sel[0] => t0[1].IN1
sel[0] => t2[1].IN1
sel[0] => t0[0].IN1
sel[0] => t2[0].IN1
sel[1] => t2.IN1
sel[1] => t2.IN1
sel[1] => t2.IN1
sel[1] => t2.IN1
sel[1] => t3.IN1
sel[1] => t3.IN1
sel[1] => t3.IN1
sel[1] => t3.IN1
sel[1] => t0.IN1
sel[1] => t1.IN1
sel[1] => t0.IN1
sel[1] => t1.IN1
sel[1] => t0.IN1
sel[1] => t1.IN1
sel[1] => t0.IN1
sel[1] => t1.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y.DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|HEX_SevenSeg:u_display
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN0
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN1
a[0] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN1
a[1] => seg0_internal.IN1
a[1] => seg0_internal.IN1
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN1
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN0
a[1] => seg0_internal.IN1
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN0
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN0
a[2] => seg0_internal.IN0
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN1
a[2] => seg0_internal.IN0
a[2] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
a[3] => seg0_internal.IN1
seg0[0] <= seg0_internal[0].DB_MAX_OUTPUT_PORT_TYPE
seg0[1] <= seg0_internal[1].DB_MAX_OUTPUT_PORT_TYPE
seg0[2] <= seg0_internal[2].DB_MAX_OUTPUT_PORT_TYPE
seg0[3] <= seg0_internal[3].DB_MAX_OUTPUT_PORT_TYPE
seg0[4] <= seg0_internal[4].DB_MAX_OUTPUT_PORT_TYPE
seg0[5] <= seg0_internal[5].DB_MAX_OUTPUT_PORT_TYPE
seg0[6] <= seg0_internal[6].DB_MAX_OUTPUT_PORT_TYPE


|Topmodule|pwm_controller:u_pwm
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => clk_div[0].CLK
clk => clk_div[1].CLK
clk => clk_div[2].CLK
clk => clk_div[3].CLK
clk => clk_div[4].CLK
clk => clk_div[5].CLK
clk => clk_div[6].CLK
clk => clk_div[7].CLK
clk => clk_div[8].CLK
clk => clk_div[9].CLK
clk => clk_div[10].CLK
clk => clk_div[11].CLK
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => clk_div[0].ACLR
rst => clk_div[1].ACLR
rst => clk_div[2].ACLR
rst => clk_div[3].ACLR
rst => clk_div[4].ACLR
rst => clk_div[5].ACLR
rst => clk_div[6].ACLR
rst => clk_div[7].ACLR
rst => clk_div[8].ACLR
rst => clk_div[9].ACLR
rst => clk_div[10].ACLR
rst => clk_div[11].ACLR
duty[0] => LessThan0.IN15
duty[0] => LessThan0.IN16
duty[1] => LessThan0.IN13
duty[1] => LessThan0.IN14
duty[2] => LessThan0.IN11
duty[2] => LessThan0.IN12
duty[3] => LessThan0.IN9
duty[3] => LessThan0.IN10
pwm_out <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


